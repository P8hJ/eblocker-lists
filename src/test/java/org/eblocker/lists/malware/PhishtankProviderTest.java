/*
 * Copyright 2020 eBlocker Open Source UG (haftungsbeschraenkt)
 *
 * Licensed under the EUPL, Version 1.2 or - as soon they will be
 * approved by the European Commission - subsequent versions of the EUPL
 * (the "License"); You may not use this work except in compliance with
 * the License. You may obtain a copy of the License at:
 *
 *   https://joinup.ec.europa.eu/page/eupl-text-11-12
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
package org.eblocker.lists.malware;

import com.google.common.collect.Sets;
import org.eblocker.server.common.malware.MalwareEntry;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.mockito.Mockito;

import java.io.IOException;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class PhishtankProviderTest {

    private PhishtankDownloader downloader;
    private PhishtankProvider provider;

    @Before
    public void setup() {
        downloader = Mockito.mock(PhishtankDownloader.class);
        provider = new PhishtankProvider(downloader);
    }

    @Test
    public void testParsing() throws IOException, MalwareListException {
        Mockito.when(downloader.retrieveEntries()).thenReturn(Arrays.asList(
            new PhishtankEntry("host/path", "PayPal"),
            new PhishtankEntry("host2/path", "PayPal"),
            new PhishtankEntry("host2/path", "eBay")
        ));

        MalwareEntries entries = provider.getMalwareEntries();

        Assert.assertNotNull(entries);
        Assert.assertNotNull(entries.getFilteredUrls());
        Assert.assertEquals(2, entries.getFilteredUrls().size());

        List<MalwareEntry> filteredUrls = entries.getFilteredUrls();
        Collections.sort(filteredUrls, Comparator.comparing(MalwareEntry::getUrl));

        Assert.assertEquals("host/path", filteredUrls.get(0).getUrl());
        Assert.assertArrayEquals(new String[]{ "PayPal" }, filteredUrls.get(0).getHostedMalware());

        Assert.assertEquals("host2/path", filteredUrls.get(1).getUrl());
        Assert.assertEquals(Sets.newHashSet("PayPal", "eBay"), Sets.newHashSet(filteredUrls.get(1).getHostedMalware()));
    }
}