/*
 * Copyright 2020 eBlocker Open Source UG (haftungsbeschraenkt)
 *
 * Licensed under the EUPL, Version 1.2 or - as soon they will be
 * approved by the European Commission - subsequent versions of the EUPL
 * (the "License"); You may not use this work except in compliance with
 * the License. You may obtain a copy of the License at:
 *
 *   https://joinup.ec.europa.eu/page/eupl-text-11-12
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
package org.eblocker.lists.malware;

import org.eblocker.server.common.malware.MalwareEntry;
import org.junit.Before;
import org.junit.Test;
import org.mockito.Mockito;

import java.util.List;
import java.util.stream.Stream;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;

public class UrlhausProviderTest {

    private UrlhausDownloader downloader;
    private UrlhausProvider provider;

    @Before
    public void setup() {
        downloader = Mockito.mock(UrlhausDownloader.class);
        provider = new UrlhausProvider(downloader);
    }

    @Test
    public void testUrlParsing() throws MalwareListException {
        Mockito.when(downloader.retrieveEntries()).thenReturn(Stream.of(
                new UrlhausEntry(
                        "http://192.168.0.1:5050/bad.sh", "a threat", "some tags"),
                new UrlhausEntry("https://bad.com/worse.rar", "a threat", "some tags"),
                new UrlhausEntry("http://malware.com/evil.exe", "a threat", "some tags")
        ));

        MalwareEntries entries = provider.getMalwareEntries();

        List<MalwareEntry> filteredUrls = entries.getFilteredUrls();
        assertEquals(3, filteredUrls.size());

        assertEquals("192.168.0.1:5050/bad.sh", filteredUrls.get(0).getUrl());
        assertArrayEquals(new String[]{ "a threat: some tags" }, filteredUrls.get(0).getHostedMalware());

        assertEquals("bad.com/worse.rar", filteredUrls.get(1).getUrl());
        assertArrayEquals(new String[]{ "a threat: some tags" }, filteredUrls.get(1).getHostedMalware());

        assertEquals("malware.com/evil.exe", filteredUrls.get(2).getUrl());
        assertArrayEquals(new String[]{ "a threat: some tags" }, filteredUrls.get(2).getHostedMalware());
    }
}