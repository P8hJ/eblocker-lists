/*
 * Copyright 2020 eBlocker Open Source UG (haftungsbeschraenkt)
 *
 * Licensed under the EUPL, Version 1.2 or - as soon they will be
 * approved by the European Commission - subsequent versions of the EUPL
 * (the "License"); You may not use this work except in compliance with
 * the License. You may obtain a copy of the License at:
 *
 *   https://joinup.ec.europa.eu/page/eupl-text-11-12
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
package org.eblocker.lists.malware;

import org.eblocker.server.common.malware.MalwareEntry;
import org.junit.Assert;
import org.junit.Test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class MalwareEntriesTest {

    @Test
    public void testMergeFilteredUrls() {
        List<MalwareEntry> filteredUrlsA = new ArrayList<>();
        filteredUrlsA.add(new MalwareEntry("www.evil-host.com", new String[]{ "malware0", "malware1" }));
        filteredUrlsA.add(new MalwareEntry("www.bad-host.com", new String[]{ "malware" }));

        List<MalwareEntry> filteredUrlsB = new ArrayList<>();
        filteredUrlsB.add(new MalwareEntry("www.evil-host.com", new String[]{ "malware1", "malware2" }));
        filteredUrlsB.add(new MalwareEntry("www.sneaky-host.com", new String[]{ "malware" }));

        MalwareEntries entries = new MalwareEntries(filteredUrlsA);
        entries.merge(new MalwareEntries(filteredUrlsB));

        Assert.assertEquals(3, entries.getFilteredUrls().size());

        Map<String, List<String>> filteredUrlsByUrl = entries.getFilteredUrls().stream()
            .collect(Collectors.toMap(MalwareEntry::getUrl,
                e -> Arrays.asList(e.getHostedMalware()).stream().sorted().collect(Collectors.toList())));
        Assert.assertEquals(Arrays.asList("malware0", "malware1", "malware2"), filteredUrlsByUrl.get("www.evil-host.com"));
        Assert.assertEquals(Collections.singletonList("malware"), filteredUrlsByUrl.get("www.bad-host.com"));
        Assert.assertEquals(Collections.singletonList("malware"), filteredUrlsByUrl.get("www.sneaky-host.com"));
    }
}