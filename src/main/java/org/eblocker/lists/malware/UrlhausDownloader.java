package org.eblocker.lists.malware;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.eblocker.lists.util.HttpClient;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.List;
import java.util.Properties;
import java.util.stream.Stream;

class UrlhausDownloader {

    private static final String HEADER_TAGS = "tags";
    private static final String HEADER_URL = "url";
    private static final String HEADER_THREAT = "threat";

    static final String URL_KEY = "provider.urlhaus.url";

    private static final Logger log = LoggerFactory.getLogger(UrlhausDownloader.class);

    private final HttpClient httpClient;
    private final String url;

    UrlhausDownloader(Properties properties, HttpClient httpClient) {
        this.httpClient = httpClient;
        this.url = properties.getProperty(URL_KEY);
    }

    Stream<UrlhausEntry> retrieveEntries() throws MalwareListException {
        return parseEntries(downloadData());
    }

    private Stream<UrlhausEntry> parseEntries(List<CSVRecord> downloadData) {
        return downloadData.stream()
                .map(this::resolveURL);
    }

    private UrlhausEntry resolveURL(CSVRecord record) {
        String threat = record.get(HEADER_THREAT);
        String tags = record.get(HEADER_TAGS);
        String url = record.get(HEADER_URL);

        return new UrlhausEntry(url, threat, tags);
    }

    private List<CSVRecord> downloadData() throws MalwareListException {
        log.debug("downloading URLhaus data from {}", url);
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(httpClient.download(url, "", "")))) {
            CSVFormat format = CSVFormat.DEFAULT
                    .withCommentMarker('#')
                    .withHeader("id", "dateadded", HEADER_URL, "url_status", HEADER_THREAT, HEADER_TAGS, "urlhaus_link", "reporter");
            CSVParser parser = new CSVParser(reader, format);
            return parser.getRecords();
        } catch (IOException e) {
            throw new MalwareListException("Cannot download URLhaus data", e);
        }
    }
}
