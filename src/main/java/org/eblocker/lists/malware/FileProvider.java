/*
 * Copyright 2020 eBlocker Open Source UG (haftungsbeschraenkt)
 *
 * Licensed under the EUPL, Version 1.2 or - as soon they will be
 * approved by the European Commission - subsequent versions of the EUPL
 * (the "License"); You may not use this work except in compliance with
 * the License. You may obtain a copy of the License at:
 *
 *   https://joinup.ec.europa.eu/page/eupl-text-11-12
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
package org.eblocker.lists.malware;

import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

public class FileProvider implements MalwareProvider {

    private static final String FILE_NAME_KEY = "provider.file.fileName";

    private final String fileName;
    private final ObjectMapper objectMapper;

    public FileProvider(Properties properties, ObjectMapper objectMapper) {
        this.fileName = properties.getProperty(FILE_NAME_KEY);
        this.objectMapper = objectMapper;
    }

    @Override
    public MalwareEntries getMalwareEntries() throws MalwareListException {
        try(InputStream in = ClassLoader.getSystemResourceAsStream(fileName)) {
            return objectMapper.readValue(in, MalwareEntries.class);
        } catch (IOException e) {
            throw new MalwareListException("failed to read eblocker malware list", e);
        }
    }

}
